name: Deploy to Amazon ECS

on:
  push:
    branches: 
    - CICD-terraform

env:
  AWS_REGION: us-east-1             # set this to your preferred AWS region, e.g. us-west-1
  ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}          # set this to your Amazon ECR repository name
  SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}                  # set this to your Amazon ECS service name
  SSH_KEY_PRIVATE: ${{ secrets.AWS_SSH_KEY_PRIVATE}}                  # set this to your Amazon ECS cluster name
  SSH_PUBLIC_KEY: ${{ secrets.AWS_SSH_PUBLIC_KEY}}  
  TF_STATE_BUCKET_NAME: ${{ secrets.AWS_TF_STATE_BUCKET_NAME}}  

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrappers: false

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      id: init
      run: terraform init -backend-config="bucket = $TF_STATE_BUCKET_NAME" -backend-config="region=us-east-1"
      working-directory: ./terraform

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Plan
      id: plan
      run: |-
        terraform plan \
        -var="region=us-east-1" \
        -var="public_key=$SSH_PUBLIC_KEY" \
        -var="private_key=$SSH_KEY_PRIVATE" \
        -var="key_name=deployer-key" \
        -out=PLAN
      working-directory: ./terraform
    - name: Terraform Apply
      id: apply
      run: terraform apply PLAN
      working-directory: ./terraform
      

    